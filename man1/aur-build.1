.TH AUR\-BUILD 1 2020-10-02 AURUTILS
.SH NAME
aur\-build \- build packages to a local repository
.
.SH SYNOPSIS
.SY "aur build"
.OP \-d database
.OP \-cfSU
.OP \-a queue
.OP \-\-no\-sync
.OP \-\-pkgver
.OP \-\-results FILE
.OP \-\-root DIRECTORY
.OP \-\-margs
.RI [ makepkg_args... ]
.YS
.
.SH DESCRIPTION
Build packages adding the results to a local repository.
.
A local repository is a
.BR pacman (8)
repository configured with a
.I file://
prefix in
.BR pacman.conf (5).
.PP
.B aur\-build
runs as a regular user, unless for the following options which require
root privileges:
.BR \-\-syncdeps ,
.BR \-\-rmdeps ,
.BR \-\-chroot .
Unless the
.B \-\-nosync
or
.B \-\-chroot
options are provided,
.B aur\-build
will also attempt to sync to local the repository with
.B pacman \-Syu
and
.BR "pacman \-Fy" .
See the
.B Repository updates
section for details.
.
.SH OPTIONS
.TP
.BI \-a " FILE" "\fR,\fP \-\-arg\-file=" FILE
A text file describing directories containing a PKGBUILD relative to
the current directory. If unspecified, the current directory is
assumed.
.
.TP
.BR \-c ", " \-\-chroot
Build packages inside a
.BR systemd\-nspawn (1)
container with
.BR archbuild .
The prerequisites for this option are that the
.BR devtools
package is installed, and the a
.BR pacman (8)
configuration for the container is placed in
.BI /etc/aurutils/pacman-<database>.conf \fR
where <database> is specified with
.BR \-\-database .
If this option is not provided,
.B aur\-build
falls back to
.B /etc/aurutils/pacman-<arch>.conf
where
.I <arch>
is the output from
.BR "uname \-m" .
A different location can be chosen with the
.BR \-\-pacman\-conf
option.
.IP
Care should be taken when copying (or using)
.B /etc/pacman.conf
for this configuration file, as certain directives (e.g.
.BR IgnorePkg )
may cause issues in the container. It is recommended to instead copy
the template in
.B /usr/share/devtools/pacman-extra.conf
or
.B /usr/share/devtools/pacman-multilib.conf
and make the necessary adjustments. Due to devtools limitations, any
desired repositories should be configured explicitly in this copy.
.
.RE
.
.TP
.BI \-d " NAME" "\fR,\fP \-\-database=" NAME
The name of the
.BR pacman (8)
database.
.
.TP
.BR \-f ", " \-\-force
Continue the build process if a package with the same name is found.
.
.TP
.BR \-S ", " \-\-sign ", " \-\-gpg\-sign
Sign built packages and the database
.RB ( "repo\-add \-s" )
with
.BR gpg (1).
To use another key than the default, the
.B GPGKEY
environment variable can be set to the appropriate key identifier.
.
.TP
.BR \-\-no\-sync
Do not sync the local repository after building.
.
.TP
.BR \-\-pkgver
Run
.B "makepkg \-od"
before checking existing packages (effectively running an existing
.B pkgver()
function). The
.BR \-\-noextract
option is added to the default
.BR makepkg (8)
options.
.IP
.RS
.B Note:
The
.BR \-r ,
.BR \-s ,
and
.BR \-\-noconfirm
options are forwarded to the above command. Other
.BR makepkg (8)
options are ignored.
.RE
.
.TP
.BI \-\-results= file
Write absolute paths of successfully built packages to
.I file
in the following format:
.IP
.I build:file://<package_path>
.
.TP
.BI \-\-root= DIR
The root directory for the repository. The
.I root
is the location for the pacman database
.RI ( foo.db ),
built packages, and secondary files such as the files database
.RI ( foo.files ).
This defaults to the value of the
.B Server
directive for the configured repository.
.IP
.RS
.B Note:
The
.I Server
directive configured in
.BR pacman.conf (5)
is used for
.BR pacman (8)
sync operations regardless of this setting. See also
.BR \-\-no\-sync .
.RE
.
.SS makechrootpkg options
.TP
.BI \-D " DIR" "\fR,\fP \-\-directory=" DIR
The base directory for containers. Defaults to
.BI /var/lib/archbuild/ <chroot\-suffix> \- <arch> \fR.
.IP
.RS
.B Note:
This directory usually contains a
.B /root
subdirectory that serves as template for user containers (named after
.IR $SUDO_USER ,
or
.B /copy
if unset).
.RE
.
.TP
.BR \-N ", " \-\-namcap
Run
.BR namcap (1)
on the built package.
.
.TP
.BR \-T ", " \-\-temp
Build in a temporary container. (\fBmakechrootpkg \-T\fR) Temporary
means that the user container has a random name and is removed on
build completion.
.
.TP
.BI \-U " USER" "\fR,\fP \-\-user=" USER
Run the host
.BR makepkg (8)
instance as the specified user. (\fBmakechrootpkg \-U\fR)
.
.TP
.BI \-\-bind= DIR
Bind a directory read-only to the container. (\fBmakechrootpkg \-D\fR)
.
.TP
.BI \-\-bind\-rw= DIR
Bind a directory read-write to the container. (\fBmakechrootpkg \-d\fR)
.
.TP
.BR \-\-checkpkg
Run
.BR checkpkg (1)
on the built package.
.
.TP
.BI \-\-makepkg\-conf= FILE
The
.BR makepkg.conf (5)
file used for
.BR makepkg (8)
operations. For chroot builds, the file is also used inside the container.
.RB ( aur\-chroot " " \-\-makepkg\-conf ).
.
.TP
.BI \-\-pacman\-conf= FILE
The file used for syncing and retrieving local repositories. For chroot
builds, the file is also used inside the container
.RB ( aur\-chroot " " \-\-pacman\-conf ).
.BR makepkg (8)
calls are unaffected by this option.
.
.SS makepkg options
Additional options may be passed to
.B makepkg
by placing them after
.BR \-\-margs
(comma-separated).
.
.TP
.BR \-\-nocheck
Do not run the check() function in the PKGBUILD.
.RB ( makepkg " " \-\-nocheck )
.
.TP
.BR \-n ", " \-\-noconfirm
Do not wait for user input.
.RB ( makepkg " " \-\-noconfirm )
.
.TP
.BR \-r ", " \-\-rmdeps
Remove dependencies installed by makepkg.
.RB ( makepkg " " \-\-rmdeps )
.
.TP
.BR \-s ", " \-\-syncdeps
Install missing dependencies using
.BR pacman .
.RB ( makepkg " " \-\-syncdeps )
.
.TP
.BR \-A ", " \-\-ignorearch
Ignore a missing or incomplete
.I arch
field in the build script.
.RB ( makepkg " " \-A )
.
.TP
.BR \-L ", " \-\-log
Enable logging to a text file in the build directory.
.RB ( makepkg " " \-L )
.
.TP
.BR \-\-clean
Clean up leftover work files and directories after a successful build.
.RB ( makepkg " " \-c )
.
.TP
.BI \-\-makepkg\-conf= FILE
The
.BR makepkg.conf (5)
file used for
.BR makepkg (8)
invocations.
.RB ( makepkg " " \-\-config )
.
.SS repo\-add options
.TP
.BR \-v ", " \-\-verify
Verify the PGP signature of the database before
updating.
.RB ( repo\-add " " \-v )
.
.TP
.BR \-R ", " \-\-remove
Remove old package files from disk when updating their entry in the
database.
.RB ( repo\-add " " \-R )
.
.TP
.BR \-\-new
Only add packages that are not already in the database.
.RB ( repo\-add " " \-n )
.
.TP
.BR \-\-prevent\-downgrade
Do not add packages to the database if a newer version is already
present.
.RB ( repo\-add " " \-p )
.
.SH ENVIRONMENT
.TP
.B AUR_REPO
The repository used for building packages. If unspecified, the name is
selected with
.BR aur\-repo (1).
.
.TP
.B AUR_DBROOT
The root directory of the repository. If unspecified, the path is
retrieved with
.BR aur\-repo (1).
.
.TP
.B GNUPGHOME
Directory where the gpg keyring for signing built packages and the
database file is stored.
.
.TP
.B GPGKEY
The GPG key used for signing packages. This environment variable is
respected by
.B aur\-build
and
.BR repo\-add .
When the variable is set in
.BR makepkg.conf (5),
is it only respected by
.BR makepkg .
.
.TP
.B MAKEPKG
The command used to build packages. Any
.BR makepkg (8)
options (see the
.B makepkg options
section) forwarded must be supported by this command, as well as the
.IR \-o ,
.IR \-d ,
and
.I \-\-noextract
options if
.B aur\-build \-\-pkgver
is used.
.
.TP
.B TMPDIR
The directory for temporary files. (This includes intermediary storage
of built packages, defaulting to
.IR /var/tmp .)
.
.SH NOTES
.SS Repository updates
When building locally (outside a container),
.B "pacman \-Syu"
is run with
.BR pacman.conf (8)
only containing the local repository. This is comparable to
.BR "makepkg \-i" ,
but without subsequent package installation (if a package was
installed before, it is updated to the latest available version). An
interesting side-effect is that pacman considers packages inside the
official repositories "local", and warns if they are newer than any
custom counterpart. Packages which define a
.I replaces
field are ignored if the target package is installed on the local system.
.
.SS Using a dedicated build user
While using a dedicated user for the build process does not increase
security (beyond protecting against packaging errors that write to
.IR $HOME ),
it may be useful when the local repository will be accessible to
multiple users or as a way to avoid password prompts. (Note that such
a user must be unprivileged; as of pacman 4.2,
.BR makepkg (8)
may not run directly as root.)
.PP
New users may be created with
.BR useradd (8)
as follows:
.PP
.EX
    # useradd build \-\-system \-\-home\-dir /var/cache/build \-\-create\-home
.EE
.PP
Because dependency resolution is not replicated and left to
.BR makepkg (8)
(see
.B handle_deps()
in
.BR /usr/bin/makepkg )
the
.I build
user should be allowed to run
.BR pacman (8)
with elevated privileges. For example, create the
.I /etc/sudoers.d/10_build
file with following contents:
.PP
.EX
    build ALL = (root) NOPASSWD: /usr/bin/pacman
.EE
.PP
.BR aur\-build (1)
(and related programs such as
.BR aur\-sync (1))
may now be run as the new
.I build
user.
For example:
.PP
.EX
    # cd /var/cache/build
    # sudo \-u build git clone https://aur.archlinux.org/mypackage.git
    # cd mypackage
    # sudo \-u build aur build \-d custom
.EE
.PP
Any created files in the local repository (such as packages,
signatures and database files) will be owned by the
.I build
user.
.
.SS PKGBUILD signatures
GPG signatures defined in the
.B validpgpkeys
array may be automatically retrieved by setting the
.I "keyserver\-options auto\-key\-retrieve"
option in
.BR gpg.conf .
Note that this option only works with signatures that include an
issuer fingerprint. See
.B \-\-auto\-key\-retrieve
in
.BR gpg (1)
for details.
.
.SS Rebuilding packages against updated dependencies
It is sometimes required to rebuild packages when their dependencies
are updated, for example in the case of dynamic library linking.  To
detect which packages require a rebuild, the
.UR https://\:github.com/\:maximbaz/\:rebuild-detector
rebuild-detector
.UE
package can be used.
.
.SS Installing dependencies with makepkg
If
.B \-\-syncdeps
is specified, package dependencies are installed with
.BR "makepkg \-s" .
.B makepkg
uses the
.B pacman \-S \-\-asdeps
command for this purpose. If other pacman options are desired for this
command, a wrapper script and the
.B PACMAN
environment variable have to be used. (See
.B ENVIRONMENT VARIABLES
in
.BR makepkg (8).)
.PP
For example, to use a custom
.BR pacman.conf (5)
file, create a wrapper script:
.PP
.EX
  #!/bin/sh --
  pacman --config </path/to/file> "$@"
.EE
.PP
and set the
.B PACMAN
environment variable to its path. (In this particular example,
building inside a container with dedicated
.BR pacman.conf(5)
is an alternative.)
.
.SH BUGS
Databases are built with
.B LANG=C
to avoid libalpm from skipping entries if the locale is not set
(FS#49342). Packages are signed manually with
.B "gpg \-\-batch \-\-detach\-sign \-\-no\-armor"
(FS#49946).
.PP
.BR pacman (8)
has a size-limit of 25\~MiB for databases. The use of larger databases
may result in an
.B expected download size exceeded
error. To avoid this issue, compress the database with
.BR gzip (1).
See
.UR https://\:git.archlinux.org/\:pacman.git/\:commit/\:?id=\:6dc71926f9b16ebcf11b924941092d6eab204224
.UE
for details.
.
.SH SEE ALSO
.ad l
.nh
.BR aur (1),
.BR aur\-chroot (1),
.BR aur\-repo (1),
.BR makepkg.conf (5),
.BR pacman.conf (5),
.BR sudoers (5),
.BR makepkg (8),
.BR pacman (8),
.BR repo\-add (8),
.BR sudo (8)
.
.SH AUTHORS
.MT https://github.com/AladW
Alad Wenter
.ME
.
.\" vim: set textwidth=72:
